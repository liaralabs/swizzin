#!/usr/bin/env bash

get_port() {
    installer="/etc/swizzin/scripts/nginx/$1.sh"
    if [ -f "$installer" ]; then
        grep -w "proxy_pass" "$installer" | sed 's/.*://; s/[^0-9].*//'
    else
        return 1
    fi
}

check_service() {
    echo_progress_start "Checking $1 service is active"
    systemctl -q is-active "$1" || {
        systemctl status "$1"
        echo_warn "$1.service not active!"
        echo
        return 1
    }
    echo_progress_done
}

check_nginx() {
    extra_params="$2"
    echo_progress_start "Checking if $1 is reachable via nginx"
    master="$(_get_master_username)"
    password="$(_get_user_password "$master")"
    curl --user "${master}:${password}" $extra_params -sSfLk https://127.0.0.1/"$1" -o /dev/null || {
        echo_warn "Querying https://127.0.0.1/$1 failed"
        echo
        return 1
    }
    echo_progress_done
}

# Checks a port or the port of an app suplied via $1
check_port_curl() {
    echo_progress_start "Checking if port $1 is reachable via curl"
    if [ "$1" -eq "$1" ] 2> /dev/null; then
        port=$1
    else
        port=$(get_port "$1") || {
            echo_warn "Couldn't guess port"
            return 1
        }
    fi
    extra_params="$2"

    curl -sSfLk $extra_params http://127.0.0.1:"$port" -o /dev/null || {
        echo_warn "Querying http://127.0.0.1:$port failed"
        echo
        return 1
    }
    echo_progress_done
}

check_port() {
    echo_progress_start "Checking if port $1 is open and listened to"
    if [ "$1" -eq "$1" ] 2> /dev/null; then
        port=$1
    else
        port=$(get_port "$1") || {
            echo_warn "Couldn't guess port"
            return 1
        }
    fi

    lsof "-i:$port" > /dev/null || {
        echo_warn "Port $port does not seem to be open"
    }

    echo_progress_done
}

evaluate_bad() {
    if [[ $bad == "true" ]]; then
        echo_error "Errors were encountered"
        exit 1
    else
        echo_success "No problems were encountered"
    fi
}
